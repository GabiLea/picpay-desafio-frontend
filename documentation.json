{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "ApiService",
            "id": "injectable-ApiService-4a94388b2f1e030972dcbab8251937379daaddb4c4d07a20d870c9212e68fb32452a29dc03f629743df329de066067fa33e0ac4fb5a46002ee68df09e6a647c8",
            "file": "src/app/api/api.service.ts",
            "properties": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [
                {
                    "name": "deleteTasks",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editTasks",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAllTasks",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTasks",
                    "args": [
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "20"
                        },
                        {
                            "name": "offset",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "1"
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "20",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "offset",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "1",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTasksWithId",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUserAccount",
                    "args": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postTasks",
                    "args": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\nclass User {\n  email: string;\n  senha: string;\n}\n\n@Injectable()\nexport class ApiService {\n\n  user: User\n\n  constructor(private http: HttpClient) { }\n\n  getUserAccount(user: User){\n    return this.http.get(`http://localhost:3000/account?senha=${user.senha}&email=${user.email}`)\n  } \n\n  getAllTasks(){\n    return this.http.get(`http://localhost:3000/tasks`)\n  }\n\n  getTasks(limit = 20, offset = 1, name = ''){\n    return this.http.get(`http://localhost:3000/tasks?_limit=${limit}&_page=${offset}&name_like=${name}&_sort=id&_order=desc`, {\n      observe: 'response'\n    })\n  } \n\n  getTasksWithId(id: number){\n    return this.http.get(`http://localhost:3000/tasks?id=${id}`)\n  } \n\n  postTasks(body){\n    return this.http.post(`http://localhost:3000/tasks`, body)\n  } \n  \n  deleteTasks(id: string){\n    return this.http.delete(`http://localhost:3000/tasks/${id}`)\n  } \n\n  editTasks(id, body){\n    return this.http.put(`http://localhost:3000/tasks/${id}`, body)\n  } \n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AuthService",
            "id": "injectable-AuthService-5f7d10bd999b8b87a7cb453644efc98ae2cc877836d0113bbd4422ba220c9bc149acdb55df3ccf566c9ffbed38d809dabc5f06b3b550ef0a320fd98ce977f56e",
            "file": "src/app/services/auth/auth.service.ts",
            "properties": [
                {
                    "name": "userAuthenticated",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "authenticated",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\nimport { ApiService } from '../../api/api.service';\n\nclass User {\n  email: string;\n  senha: string;\n}\n\n@Injectable()\nexport class AuthService {\n\n  private userAuthenticated: boolean = false\n\n  constructor(private router: Router, private apiService: ApiService) {\n    this.userAuthenticated = sessionStorage.getItem(\"auth\") === 'true';\n  }\n\n  login(user: User){\n    this.apiService.getUserAccount(user).subscribe((data) => {\n      this.userAuthenticated = !!data[0]\n      if (this.userAuthenticated) {\n        sessionStorage.setItem(\"auth\",\"true\")\n        this.router.navigate(['/']);\n      } else {\n        this.router.navigate(['/login']);\n      }\n    })\n  }\n  \n  logout(){\n    sessionStorage.setItem(\"auth\",\"false\")\n  }\n\n  authenticated(){\n    return this.userAuthenticated;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apiService",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "apiService",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TasksService",
            "id": "injectable-TasksService-48a49f9d1fd2db7c4284158291beb2f75d1afd5609bf5d6dc51d451a54222a9ccf119da6fb5f5e5cbedeee9bd4b0afce5d3ef9a489ef60ee32070534b20ea909",
            "file": "src/app/middleware/tasks.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "convertDate",
                    "args": [
                        {
                            "name": "date",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "convertPrice",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatPrice",
                    "args": [
                        {
                            "name": "number",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "number",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAllPayments",
                    "args": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mountItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "subItem",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "{ item: any; subItem: any; }",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "subItem",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mountPaymentList",
                    "args": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mountPostTask",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ApiService } from '../api/api.service';\n\n@Injectable()\nexport class TasksService {\n\n  constructor(private apiSevice: ApiService) { }\n\n  getAllPayments(data){\n    return this.mountPaymentList(data)\n  }\n\n  mountPaymentList(data){\n    \n    const result = data.map(item => ({\n      id: item.id,\n      items: [\n        this.mountItem(item.name.match(/\\w+/ig)[0], `@${item.username}`),\n        this.mountItem(item.title),\n        this.mountItem(new Date(item.date).toLocaleDateString('pt-BR'), new Date(item.date).toLocaleTimeString('pt-BR')),\n        this.mountItem(`R$ ${this.formatPrice(item.value)}`),\n        this.mountItem(item.isPayed),\n      ]\n    }))\n    \n    return result\n  }\n\n  mountPostTask(value){\n    const data = {\n      \"name\": value.usuario.trim(),\n      \"username\": `${value.usuario.replace(/\\s*/ig, '').toLowerCase()}`,\n      \"title\": value.titulo.trim(),\n      \"value\": this.convertPrice(value.valor),\n      \"date\": this.convertDate(value.data),\n      \"image\": \"https://picsum.photos/400/400\",\n      \"isPayed\": false\n    }\n    return this.apiSevice.postTasks(data)\n  }\n\n  mountItem(item, subItem?) {\n    return {item, subItem}\n  }\n\n  formatPrice(number){\n    if (typeof number !== 'number' || isNaN(number)) {\n      return null;\n    }\n    \n    number = number.toFixed(2).split('.');\n    number[0] = `${number[0].split(/(?=(?:...)*$)/).join('.')}`;\n    return number.join(',');\n  };\n\n  convertPrice(value) {\n    return parseInt(parseInt(value).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&'))\n  }\n\n  convertDate(date){\n    const datearray = date.split(\"/\");\n    const newdate = `${datearray[1]}-${datearray[0]}-${datearray[2]}`\n    return new Date(newdate).toISOString()\n  }\n  \n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apiSevice",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "apiSevice",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-4842322ded1f5f208e226dc5d3d390d63d0f954b71fe29865053b89dd2ebaae44c99cc3301a68dedff0bd14a0a0ce22f6cc3f8a7238189e2c24124b263d5a2de",
            "file": "src/app/middleware/user.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "isAUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\nimport { ApiService } from '../api/api.service';\n\nclass User {\n  email: string;\n  senha: string;\n}\n\n@Injectable()\nexport class UserService {\n\n  constructor(private apiServer: ApiService) { }\n\n  isAUser(user: User){\n    this.apiServer.getUserAccount(user)\n    return this.apiServer.user\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apiServer",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "apiServer",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-adc7b28efb6a3c0fca9d7364e68b9b5918628f3669bc1c5c666ab2966ae476d5f48b0678bef9932982cec9cc9fc6f7efbd4c2beb5edbde688eb8a6e0f8012040",
            "file": "src/app/guards/auth.guards.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | boolean",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "canLoad",
                    "args": [
                        {
                            "name": "route",
                            "type": "Route",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Promise | boolean",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "Route",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkAccess",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanLoad, Route } from '@angular/router';\n\nimport { AuthService } from '../services/auth/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate, CanLoad {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) : Observable<boolean> | boolean {\n\n    console.info('AuthGuard');\n\n    return this.checkAccess(state);\n  }\n\n  private checkAccess(state?){\n    const pageLogin = state.url.includes('login')\n\n    if (this.authService.authenticated()){\n\n      pageLogin && this.router.navigate(['/']);\n    \n      return true;\n    } \n\n    !pageLogin && this.router.navigate(['/login']);\n\n    if(pageLogin){\n      return true\n    }\n\n    return false;\n  }\n\n  canLoad(route: Route): Observable<boolean>|Promise<boolean>|boolean {\n    return this.checkAccess();\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-26322ff073dfcbfa6519992fd3cd1b20b193e0915c429b3aac5a0788d894b559631222ec399201274a33c6c801dda21f5de403acbb0dd35d73f50f5bc7ff08f3",
            "file": "e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise<any>;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Data",
            "id": "class-Data-9ececef379f437e7a2c9e628ff65a5eb3bc0285384b3d4bebd76f4d263ade0c827ee315f65de2d6a0d602abf35c19942ee624cb06ec3227b7223948238f71e44",
            "file": "src/app/components/pages/home/home.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Component } from '@angular/core';\nimport { ApiService } from '../../../api/api.service';\nimport { TasksService } from '../../../middleware/tasks.service';\n\nclass Data {\n  id: number\n  name: string\n  username: string\n  title: string\n  value: number\n  date: string\n  image: string\n  isPayed: boolean\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\n\nexport class HomeComponent {\n\n  public paymentList\n  public limit = 20\n  public offset = 1\n  public name: string = ''\n  disabled: boolean = true\n  \n  constructor(private apiSevice: ApiService, private taskSevice: TasksService){\n  }\n\n  getApiTasks(limit, offset, name?){\n    this.apiSevice.getTasks(limit, offset, name).subscribe((res) => {\n      this.paymentList = {\n        tableHead: ['Usuário', 'Título', 'Data', 'Valor', 'Pago'],\n        list: this.taskSevice.getAllPayments(res.body),\n        total: res.headers.get('X-Total-Count')\n      }\n    })\n  }\n  \n  ngOnInit(){\n    this.getApiTasks(this.limit, this.offset, this.name)\n  }\n\n  openModal(){\n    this.disabled = false\n  }\n\n\n  addPayment(value){\n    this.disabled = true\n    Object.keys(value).length > 0 && this.taskSevice.mountPostTask(value).subscribe((data: Data) => {\n      alert(`task do ${data.username} adicionado com sucesso`)\n      this.getApiTasks(this.limit, this.offset, this.name)\n    })\n  }\n  \n  onEvent({type, data: body}){\n    type === 'delete' && this.apiSevice.deleteTasks(body).subscribe(() => {\n      alert(`task ${body} deletado com sucesso`)\n      this.getApiTasks(this.limit, this.offset)\n    })\n    type === 'edit' && this.apiSevice.getTasksWithId(parseInt(body.id)).subscribe((data) => {\n      this.apiSevice.editTasks(body.id, {...data[0], isPayed: body.value}).subscribe(() => {\n        this.getApiTasks(this.limit, this.offset, this.name)\n      })\n    })\n\n  }\n\n  trigger(value){\n    this.limit = value?.limit || 20\n    this.offset = value?.offset || 1\n    this.name = value?.search || ''\n\n    Object.keys(value).length > 0 && this.getApiTasks(value.limit, value.offset, value?.search)\n  }\n\n}\n",
            "properties": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "isPayed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "User",
            "id": "class-User-4a94388b2f1e030972dcbab8251937379daaddb4c4d07a20d870c9212e68fb32452a29dc03f629743df329de066067fa33e0ac4fb5a46002ee68df09e6a647c8",
            "file": "src/app/api/api.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\nclass User {\n  email: string;\n  senha: string;\n}\n\n@Injectable()\nexport class ApiService {\n\n  user: User\n\n  constructor(private http: HttpClient) { }\n\n  getUserAccount(user: User){\n    return this.http.get(`http://localhost:3000/account?senha=${user.senha}&email=${user.email}`)\n  } \n\n  getAllTasks(){\n    return this.http.get(`http://localhost:3000/tasks`)\n  }\n\n  getTasks(limit = 20, offset = 1, name = ''){\n    return this.http.get(`http://localhost:3000/tasks?_limit=${limit}&_page=${offset}&name_like=${name}&_sort=id&_order=desc`, {\n      observe: 'response'\n    })\n  } \n\n  getTasksWithId(id: number){\n    return this.http.get(`http://localhost:3000/tasks?id=${id}`)\n  } \n\n  postTasks(body){\n    return this.http.post(`http://localhost:3000/tasks`, body)\n  } \n  \n  deleteTasks(id: string){\n    return this.http.delete(`http://localhost:3000/tasks/${id}`)\n  } \n\n  editTasks(id, body){\n    return this.http.put(`http://localhost:3000/tasks/${id}`, body)\n  } \n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "senha",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "User",
            "id": "class-User-4842322ded1f5f208e226dc5d3d390d63d0f954b71fe29865053b89dd2ebaae44c99cc3301a68dedff0bd14a0a0ce22f6cc3f8a7238189e2c24124b263d5a2de-1",
            "file": "src/app/middleware/user.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core';\n\nimport { ApiService } from '../api/api.service';\n\nclass User {\n  email: string;\n  senha: string;\n}\n\n@Injectable()\nexport class UserService {\n\n  constructor(private apiServer: ApiService) { }\n\n  isAUser(user: User){\n    this.apiServer.getUserAccount(user)\n    return this.apiServer.user\n  }\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "senha",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "User-1"
        },
        {
            "name": "User",
            "id": "class-User-5f7d10bd999b8b87a7cb453644efc98ae2cc877836d0113bbd4422ba220c9bc149acdb55df3ccf566c9ffbed38d809dabc5f06b3b550ef0a320fd98ce977f56e-2",
            "file": "src/app/services/auth/auth.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\nimport { ApiService } from '../../api/api.service';\n\nclass User {\n  email: string;\n  senha: string;\n}\n\n@Injectable()\nexport class AuthService {\n\n  private userAuthenticated: boolean = false\n\n  constructor(private router: Router, private apiService: ApiService) {\n    this.userAuthenticated = sessionStorage.getItem(\"auth\") === 'true';\n  }\n\n  login(user: User){\n    this.apiService.getUserAccount(user).subscribe((data) => {\n      this.userAuthenticated = !!data[0]\n      if (this.userAuthenticated) {\n        sessionStorage.setItem(\"auth\",\"true\")\n        this.router.navigate(['/']);\n      } else {\n        this.router.navigate(['/login']);\n      }\n    })\n  }\n  \n  logout(){\n    sessionStorage.setItem(\"auth\",\"false\")\n  }\n\n  authenticated(){\n    return this.userAuthenticated;\n  }\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "senha",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "User-2"
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-9a0298b03a928cd565073d00005a480dcfb85146f5744aedcc32f7335a20ed6efe824d20ae063a10e25c3110d3db66c2973ee73b744524d64dccd07b3241bd6d",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-5337915b2391fa7baee9346741b1fd9574b7cebc2522c9a47df9c0df7c1b316685bd4f5b075240a9c09dea7469a267b418c0cd771db0e3893b83ad5c422482ca",
            "file": "src/app/components/atoms/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconDirection",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "\"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"small\" | \"medium\" | \"large\" | \"full\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "\"button\" | \"submit\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent{\n\n  @Input()\n  primary = true;\n\n  @Input()\n  size: 'small' | 'medium' | 'large' | 'full' = 'medium';\n\n  @Input()\n  label: string;\n\n  @Input()\n  type: 'button' | 'submit' = 'button';\n\n  @Input()\n  icon: string = '';\n\n  @Input()\n  iconDirection: 'left' | 'right' = 'left'\n\n\n  @Output() click = new EventEmitter<any>();\n  \n  onClick(event) {\n    this.click.emit(event);\n  }\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'button--primary' : 'button--secondary';\n\n    return ['button', `button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".button {\n  background-color: transparent;\n  height: 3.6rem;\n  padding: 1rem 1.5rem;\n  text-transform: uppercase;\n  border: 0;\n  border-radius: 0.4rem;\n  font-size: 1.4rem;\n  line-height: 1.6rem;\n  letter-spacing: 0.1rem;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  &--primary {\n    background-color: #007dfe;\n    color: #fff;\n  }\n  &--secondary {\n    background-color: #f5f5f5;\n    color: #333;\n  }\n\n  &--small {\n    width: auto;\n    padding: 0.7rem 0.5rem;\n  }\n  &--medium {\n    width: 15rem;\n  }\n  &--large {\n    width: 23rem;\n  }\n  &--full {\n    width: 100%;\n  }\n\n  &__icon {\n    &--left {\n      margin-right: 0.5rem;\n    }\n    &--right {\n      margin-left: 0.5rem;\n    }\n  }\n}\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 35
                    }
                }
            },
            "templateData": "<button [type]=\"type\" [ngClass]=\"classes\" (click)=\"onClick($event)\">\n  <span class=\"material-icons button__icon button__icon--left\" *ngIf=\"iconDirection === 'left'\">{{ icon }}</span>\n  {{label}}\n  <span class=\"material-icons button__icon button__icon--right\" *ngIf=\"iconDirection === 'right'\">{{ icon }}</span>\n</button>\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-95f709cbb0960b66a74e7c0fdddfac66f8361abfef75d24c01c2ec61541a81d359362687505a6579291f2cffe4961a33f86c7b7418e4cfcb93c0c7e19280fe85",
            "file": "src/app/components/atoms/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "check",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent {\n\n  @Input()\n  name: string\n\n  @Input()\n  id: string\n\n  @Input()\n  checked: boolean\n\n  @Output() check = new EventEmitter<any>();\n  \n  onClick(event: KeyboardEvent){\n    const target = (<HTMLInputElement>event.target)\n    this.checked = target.checked\n    !!this.check && this.check.emit({id: this.id, value: target.checked});\n  }\n  \n  public get classes(): string[] {\n    const check = !!this.checked ? 'checkbox--checked' : ''\n    return ['checkbox', check];\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".checkbox {\n  width: 1.8rem;\n  height: 1.8rem;\n  color: #fff;\n  position: relative;\n  display: block;\n  &--icon {\n    cursor: pointer;\n    border-radius: 0.3rem;\n    background-color: #007dfe;\n    position: absolute;\n    left: 0;\n    top: 0;\n    font-size: 1.8rem;\n\n    width: 100%;\n    height: 100%;\n  }\n  &--checked {\n    .checked {\n      display: block !important;\n    }\n  }\n  .checked {\n    display: none;\n    pointer-events: none;\n  }\n  .disabled {\n    display: none;\n    pointer-events: none;\n  }\n}\n",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 27
                    }
                }
            },
            "templateData": "<div [ngClass]=\"classes\">\n  <label for=\"{{ id }}\" class=\"checkbox--icon\"></label>\n  <span class=\"material-icons checkbox--icon checked\">\n    check\n  </span>\n  <input type=\"checkbox\" id=\"{{ id }}\" name=\"{{ name }}\" value=\"{{ !!checked }}\" (change)=\"onClick($event)\" [checked]=\"checked\" class=\"disabled\"/>\n</div>\n"
        },
        {
            "name": "CountPageComponent",
            "id": "component-CountPageComponent-87719149bfc8222c8989da19b95c603eb31006ee08c60c5d7584dc1e77b4f9215185aeb22caab7dc34b61a8c9d63c5c78c69ba499279dd80316a65b502f56cdd",
            "file": "src/app/components/molecules/count-page/count-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-count-page",
            "styleUrls": [
                "./count-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./count-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "current",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "limit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "total",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "trigger",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "pages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "next",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "prev",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-count-page',\n  templateUrl: './count-page.component.html',\n  styleUrls: ['./count-page.component.scss']\n})\nexport class CountPageComponent {\n\n  @Input()\n  total: number\n\n  @Input()\n  current: number = 1\n  \n  @Input()\n  limit\n  \n  pages: number[]\n  \n  @Output() trigger = new EventEmitter<any>();\n  \n  ngOnChanges(){\n    this.pages = Array.from(new Array(Math.round(this.total/this.limit)), (v, k) => k)\n  }\n  \n  onClick(value: string | number){\n    \n    this.current = parseInt(`${value}`)\n    this.trigger.emit(value);\n  }\n  \n  prev(){\n    const prev = this.current - 1\n    this.current = prev\n    this.trigger.emit(prev);\n  }\n  next(){\n    const next = this.current + 1\n    \n    this.current = next\n    this.trigger.emit(next);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".count-page {\n  display: flex;\n  align-items: center;\n  flex-wrap: nowrap;\n\n  &__list {\n    margin: 0 1.6rem;\n  }\n\n  &__item {\n    display: inline-block;\n    color: #69788c;\n    font-size: 1.2rem;\n    line-height: 1.4rem;\n    padding: 0.4rem 0.8rem;\n    margin: 0.4rem;\n    cursor: pointer;\n\n    &[data-disabled=\"true\"] {\n      display: none;\n    }\n\n    &--selected {\n      background-color: #007dfe;\n      color: #fff;\n      border-radius: 0.6rem;\n    }\n  }\n\n  &__arrow {\n    margin: 0.4rem;\n\n    &--disabled {\n      pointer-events: none;\n      opacity: 5px;\n    }\n  }\n}\n",
                    "styleUrl": "./count-page.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"count-page\">\n  <div class=\"count-page__arrow\" [ngStyle]=\"current === 1 && { 'pointerEvents':'none', 'opacity':'5px'}\">\n    <app-icon-button name=\"chevron_left\" (callback)=\"prev()\"></app-icon-button>\n  </div>\n  <ul class=\"count-page__list\">\n    <li \n      [ngClass]=\"(i + 1) === current ? 'count-page__item count-page__item--selected' : 'count-page__item'\"  \n      *ngFor=\"let item of pages; index as i\"\n      (click)=\"onClick(i + 1)\"\n      [attr.data-disabled]=\"pages.length > 10 && i != 0 && i != pages.length - 1 && i < pages.length - 3 && i > 0 + 3 && i != current - 1 && i != current + 1\"\n    >{{ i + 1 }}</li>\n  </ul>\n  <div class=\"count-page__arrow\" [ngStyle]=\"current === pages.length && { 'pointerEvents':'none', 'opacity':'5px'}\">\n    <app-icon-button name=\"chevron_right\" (callback)=\"next()\" ></app-icon-button>\n  </div>\n</div>\n"
        },
        {
            "name": "FormLoginComponent",
            "id": "component-FormLoginComponent-dea11a8cdb53e9546d9a8b149704b7a67d98090c9a163626f6f00b98df8ef228500754cfcf952336eb615aa5734623800d4b830cc0520dc7f2fe582c76c64dd0",
            "file": "src/app/components/molecules/form-login/form-login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-login",
            "styleUrls": [
                "./form-login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form-login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "callback",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "formValue",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "onKeyUp",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-form-login',\n  templateUrl: './form-login.component.html',\n  styleUrls: ['./form-login.component.scss']\n})\nexport class FormLoginComponent {\n\n  formValue: object = {}\n\n  @Output() callback = new EventEmitter<any>();\n\n  onKeyUp(value){\n    this.formValue = {...this.formValue, ...value}\n  }\n\n  onSubmit(event){\n    event.preventDefault()\n    this.callback.emit(this.formValue)\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form-login {\n  display: grid;\n  gap: 3.5rem;\n}\n",
                    "styleUrl": "./form-login.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<form class=\"form-login\" (submit)=\"onSubmit($event)\">\n  <app-input \n    id=\"email\"\n    name=\"email\"\n    styleInput=\"login\"\n    label=\"Email\"\n    placeholder=\"Email\"\n    type=\"text\"\n    (typing)=\"onKeyUp($event)\"\n  >\n  </app-input>\n  <app-input\n    id=\"senha\"\n    name=\"senha\"\n    styleInput=\"login\"\n    label=\"Senha\"\n    placeholder=\"Senha\"\n    type=\"password\"\n    (typing)=\"onKeyUp($event)\"\n  ></app-input>\n  <app-button size=\"full\" type=\"submit\" label=\"Entrar\"></app-button>\n</form>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-baa6f1e1884016686299891336046df42f1901ff07c5282c0fc5a1a8a53691ee057b6ac78066e221dfb300978f96324b07ce32407df543404604b0b144188f82",
            "file": "src/app/components/molecules/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".header {\n  background-color: #002d69;\n  width: 100%;\n  height: 9rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 3rem;\n}\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"header\">\n  <app-logo type=\"white\"></app-logo>\n  <app-image image=\"assets/images/image-profile.png\"></app-image>\n</div>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-9ececef379f437e7a2c9e628ff65a5eb3bc0285384b3d4bebd76f4d263ade0c827ee315f65de2d6a0d602abf35c19942ee624cb06ec3227b7223948238f71e44",
            "file": "src/app/components/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "disabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "limit",
                    "defaultValue": "20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "offset",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "paymentList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addPayment",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getApiTasks",
                    "args": [
                        {
                            "name": "limit",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "offset",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "limit",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "offset",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEvent",
                    "args": [
                        {
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "trigger",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { ApiService } from '../../../api/api.service';\nimport { TasksService } from '../../../middleware/tasks.service';\n\nclass Data {\n  id: number\n  name: string\n  username: string\n  title: string\n  value: number\n  date: string\n  image: string\n  isPayed: boolean\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\n\nexport class HomeComponent {\n\n  public paymentList\n  public limit = 20\n  public offset = 1\n  public name: string = ''\n  disabled: boolean = true\n  \n  constructor(private apiSevice: ApiService, private taskSevice: TasksService){\n  }\n\n  getApiTasks(limit, offset, name?){\n    this.apiSevice.getTasks(limit, offset, name).subscribe((res) => {\n      this.paymentList = {\n        tableHead: ['Usuário', 'Título', 'Data', 'Valor', 'Pago'],\n        list: this.taskSevice.getAllPayments(res.body),\n        total: res.headers.get('X-Total-Count')\n      }\n    })\n  }\n  \n  ngOnInit(){\n    this.getApiTasks(this.limit, this.offset, this.name)\n  }\n\n  openModal(){\n    this.disabled = false\n  }\n\n\n  addPayment(value){\n    this.disabled = true\n    Object.keys(value).length > 0 && this.taskSevice.mountPostTask(value).subscribe((data: Data) => {\n      alert(`task do ${data.username} adicionado com sucesso`)\n      this.getApiTasks(this.limit, this.offset, this.name)\n    })\n  }\n  \n  onEvent({type, data: body}){\n    type === 'delete' && this.apiSevice.deleteTasks(body).subscribe(() => {\n      alert(`task ${body} deletado com sucesso`)\n      this.getApiTasks(this.limit, this.offset)\n    })\n    type === 'edit' && this.apiSevice.getTasksWithId(parseInt(body.id)).subscribe((data) => {\n      this.apiSevice.editTasks(body.id, {...data[0], isPayed: body.value}).subscribe(() => {\n        this.getApiTasks(this.limit, this.offset, this.name)\n      })\n    })\n\n  }\n\n  trigger(value){\n    this.limit = value?.limit || 20\n    this.offset = value?.offset || 1\n    this.name = value?.search || ''\n\n    Object.keys(value).length > 0 && this.getApiTasks(value.limit, value.offset, value?.search)\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".home {\n  &__content {\n    padding: 1rem;\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n\n    @media (min-width: 768px) {\n      padding: 4.8rem;\n    }\n  }\n  &__list {\n    flex: 0 0 100%;\n    margin-top: 4rem;\n  }\n}\n",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apiSevice",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "taskSevice",
                        "type": "TasksService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "apiSevice",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "taskSevice",
                        "type": "TasksService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"home\">\n  <app-header></app-header>\n  <div class=\"home__content\">\n    <app-title title=\"Meus pagamentos\" size=\"large\"></app-title>\n    <app-button label=\"Adicionar Pagamento\" size=\"large\" (click)=\"openModal()\"></app-button>\n    <div class=\"home__list\">\n      <app-payment-list [dataSource]=\"paymentList\" [limit]=\"limit\" (callbackEvent)=\"onEvent($event)\" (callback)=\"trigger($event)\"></app-payment-list>\n    </div>\n  </div>\n  <app-modal-payment (callback)=\"addPayment($event)\" [disabled]=\"disabled\"></app-modal-payment>\n</div>\n"
        },
        {
            "name": "IconButtonComponent",
            "id": "component-IconButtonComponent-392395ba5c4a8b51579856796c9fbb82935b334166c25198f14acc3e6f7b4b643ec156b155618138d4e3c63ff02e6ca7ef3913ca27e43bce9b28b03b79b301d1",
            "file": "src/app/components/atoms/icon-button/icon-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-button",
            "styleUrls": [
                "./icon-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "attrData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "callback",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-icon-button',\n  templateUrl: './icon-button.component.html',\n  styleUrls: ['./icon-button.component.scss']\n})\nexport class IconButtonComponent {\n\n  @Input()\n  name: string\n\n  @Input()\n  attrData: string\n\n  @Output() callback = new EventEmitter<any>();\n\n  onClick(event) {\n    !!this.callback && this.callback.emit({event, 'data-id': this.attrData});\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".icon-button {\n  padding: 0.1rem;\n  border: 0;\n  background-color: transparent;\n  outline: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &--icon {\n    font-size: 2rem;\n    color: #333;\n    pointer-events: none;\n  }\n}\n",
                    "styleUrl": "./icon-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button class=\"icon-button\" (click)=\"onClick($event)\" type=\"button\" [attr.data-id]=\"attrData\">\n  <span class=\"material-icons icon-button--icon\">\n    {{ name }}\n  </span>\n</button>\n"
        },
        {
            "name": "ImageComponent",
            "id": "component-ImageComponent-ff1da3b7e19f0483169eef1c65e240653d2967f786406048755fffc6e2ddf91aa0d9680a7fea1f1fb4afe3aad1dc34a1ae66d6fe113045e5081d2dfc2b05be93",
            "file": "src/app/components/atoms/image/image.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-image",
            "styleUrls": [
                "./image.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./image.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "alternativeText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.scss']\n})\nexport class ImageComponent {\n\n\n  @Input()\n  image: string\n\n  @Input()\n  alternativeText: string\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".image {\n  width: auto;\n  height: auto;\n}\n",
                    "styleUrl": "./image.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<img class=\"image\" [src]=\"image\" [alt]=\"alternativeText\" />"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-552dd19810388426e62327bfadcaae0b50d926e0c4077b5c8e704519453ca5e1a98cb101e16a3fbb0423a6ef4d627d3cbebacf769385badd0262cda59ac4a436",
            "file": "src/app/components/atoms/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"Email\" | \"Senha\"",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleInput",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"search\" | \"login\" | \"default\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "\"text\" | \"password\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "typing",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onKeyUp",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss']\n})\nexport class InputComponent {\n\n  @Input()\n  id: string;\n\n  @Input()\n  styleInput: 'search' | 'login' | 'default' = 'default';\n\n  @Input()\n  label: 'Email' | 'Senha';\n\n  @Input()\n  placeholder: string;\n\n  @Input()\n  type: 'text' | 'password' = 'text';\n\n\n  @Output() typing = new EventEmitter<any>();\n\n  onKeyUp(event: KeyboardEvent) {\n    const target = (<HTMLInputElement>event.target)\n    const label = target.id\n    !!this.typing && this.typing.emit( {\n      [label]: target.value\n    });\n  }\n\n  public get classes(): string[] {\n    return ['input__input', `input__input--${this.styleInput}`];\n  }\n\n  public get labelClasses(): string[] {\n    const disabledValue = this.styleInput !== 'login' ? 'input--disabled' : '';\n    return ['input__label', disabledValue];\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".input {\n  &--disabled {\n    display: none;\n  }\n  &__input {\n    border-radius: 0.3rem;\n    background-color: transparent;\n    padding: 1.5rem;\n    border: 1px solid #0000001f;\n    color: #000000de;\n    font-size: 1.6rem;\n    line-height: 2.4rem;\n    outline: none;\n    width: 100%;\n\n    &::placeholder {\n      font-family: \"Roboto\";\n      font-size: 1.6rem;\n      color: #00000099;\n    }\n    &--search {\n      padding: 0.8rem;\n      border: 1px solid #cfdce5;\n      border-radius: 0.6rem;\n      font-size: 1.4rem;\n      line-height: 1.7rem;\n      &::placeholder {\n        font-size: 1.4rem;\n        color: #69788c;\n        font-family: \"lato\";\n      }\n    }\n\n    &--login {\n      border: 1px solid #dadada;\n    }\n  }\n\n  &__label {\n    font-size: 1.2rem;\n    color: #00000099;\n    position: absolute;\n    left: 1.3rem;\n    top: 0;\n    background-color: #f2f2f2;\n    padding: 0.4rem;\n    transform: translateY(-50%);\n  }\n\n  &__container {\n    position: relative;\n  }\n}\n",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 36
                    }
                },
                "labelClasses": {
                    "name": "labelClasses",
                    "getSignature": {
                        "name": "labelClasses",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 40
                    }
                }
            },
            "templateData": "<div class=\"input input__container\">\n  <label for=\"{{ id }}\" [ngClass]=\"labelClasses\">{{ label }}</label>\n  <input id=\"{{ id }}\" [type]=\"type\" [ngClass]=\"classes\" (keyup)=\"onKeyUp($event)\" placeholder=\"{{ placeholder }}\"/>\n</div>\n"
        },
        {
            "name": "ItemListComponent",
            "id": "component-ItemListComponent-f669d879758db7f504ccadc14d579b946f9215e73eab3bc8bedf5d0402cbf386bca479d90bafb3ecff6eb63989cb190e70c4d56d6a545fb3409c620e0d55aa03",
            "file": "src/app/components/atoms/item-list/item-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-item-list",
            "styleUrls": [
                "./item-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "subItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-item-list',\n  templateUrl: './item-list.component.html',\n  styleUrls: ['./item-list.component.scss']\n})\nexport class ItemListComponent  {\n\n  @Input()\n  item: string\n\n  @Input()\n  subItem: string\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".item-list {\n  display: flex;\n  flex-direction: column;\n  font-family: \"Lato\";\n  &__item {\n    color: #2d3540;\n    font-size: 1.4rem;\n    line-height: 1.7rem;\n  }\n  &__subItem {\n    margin-top: 0.4rem;\n    color: #69788c;\n    font-size: 1.2rem;\n    line-height: 2rem;\n  }\n}\n",
                    "styleUrl": "./item-list.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"item-list\">\n  <span class=\"item-list__item\">{{ item }}</span>\n  <span class=\"item-list__subItem\" *ngIf=\"subItem\">{{ subItem }}</span>\n</div>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-232c51b1a30eded0a8d1cbdcb966a6d7b2dda2a0de65c11d6a3c0891faa1c44e754d78096c68c353fc59f4ef112fc1f94823c7cabe5394fa251c5bd00346e5d8",
            "file": "src/app/components/pages/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLogin",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n\n  constructor(private authService: AuthService) { }\n\n  onLogin(value){\n    this.authService.login(value)\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".page-login {\n  display: flex;\n  flex-wrap: nowrap;\n  &__login {\n    width: 100%;\n    max-width: 32rem;\n    transform: translateY(-2rem);\n  }\n  .block {\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n    display: flex;\n    &--left {\n      background-color: #f2f2f2;\n      flex: 0 0 100%;\n      @media (min-width: 1024px) {\n        flex: 0 0 37%;\n      }\n    }\n    &--right {\n      background-color: #fff;\n      display: none;\n      flex: 1 1 auto;\n      @media (min-width: 1024px) {\n        display: flex;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"page-login\">\n  <div class=\"block block--left\">\n    <div class=\"page-login__login\">\n      <app-login (callback)=\"onLogin($event)\"></app-login>\n    </div>\n  </div>\n  <div class=\"block block--right\">\n    <app-image image=\"assets/images/image-login.png\"></app-image>\n  </div>\n</div>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-7fa6f38c36e42f17f403701b13a26844094ced04c53c2ab9fc78a89d284212a5d1ae5f2bf7a9236df89223e9ff1ad814e12acbd98dfc33a7f4cbe0f1b5bd2cd6-1",
            "file": "src/app/components/organisms/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "callback",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n\n  @Output() callback = new EventEmitter<any>();\n\n  onSubmit(value) {\n    !!this.callback && this.callback.emit(value)\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".login {\n  &--texts {\n    display: grid;\n    gap: 1.8rem;\n    margin-bottom: 4.2rem;\n  }\n}\n",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "LoginComponent-1",
            "templateData": "<div class=\"login\">\n  <div class=\"login--texts\">\n    <app-logo></app-logo>\n    <app-title size=\"medium\" title=\"Bem vindo de volta\"></app-title>\n  </div>\n  <app-form-login (callback)=\"onSubmit($event)\"></app-form-login>\n</div>\n"
        },
        {
            "name": "LogoComponent",
            "id": "component-LogoComponent-7035b6c1a2af15d42188e3fa216b40db8ba68b10d0f03d4199be9d0c668cec2612945893b4d9c3343a23df6e3c8e059b04819aa0552517af24ace27a20c608d3",
            "file": "src/app/components/atoms/logo/logo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-logo",
            "styleUrls": [
                "./logo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./logo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "image",
                    "defaultValue": "'assets/images/logo.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "\"default\" | \"white\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-logo',\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.scss']\n})\nexport class LogoComponent {\n\n  @Input()\n  type: 'default' | 'white' = 'default'\n  \n  @Input()\n  image: string = 'assets/images/logo.png'\n\n  ngOnInit() {\n    this.image = this.type === 'white' ? 'assets/images/logo_white.png' : 'assets/images/logo.png'\n  }\n\n  public get classes(): string[] {\n    const mode = this.type === 'white'? 'disabled--default' : 'disabled--white';\n\n    return ['logo', mode];\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".logo {\n  width: auto;\n  height: auto;\n\n  &.disabled {\n    &--default {\n      & .logo--default {\n        display: none;\n      }\n    }\n\n    &--white {\n      & .logo--white {\n        display: none;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./logo.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 20
                    }
                }
            },
            "templateData": "<div [ngClass]=\"classes\">\n  <div class=\"logo--default\">\n    <svg width=\"135\" height=\"23\" viewBox=\"0 0 135 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M8.36 1.2C9.88 1.2 11.2 1.456 12.32 1.968C13.44 2.464 14.304 3.184 14.912 4.128C15.52 5.056 15.824 6.152 15.824 7.416C15.824 8.68 15.52 9.776 14.912 10.704C14.304 11.632 13.44 12.352 12.32 12.864C11.2 13.36 9.88 13.608 8.36 13.608H5.432V18H0.68V1.2H8.36ZM8.072 9.864C9.048 9.864 9.784 9.656 10.28 9.24C10.776 8.808 11.024 8.2 11.024 7.416C11.024 6.632 10.776 6.024 10.28 5.592C9.784 5.16 9.048 4.944 8.072 4.944H5.432V9.864H8.072ZM23.3518 4.776C25.5118 4.776 27.1598 5.272 28.2958 6.264C29.4318 7.24 29.9998 8.744 29.9998 10.776V18H25.7518V16.32C25.0958 17.584 23.8158 18.216 21.9118 18.216C20.9038 18.216 20.0318 18.04 19.2958 17.688C18.5598 17.336 17.9998 16.864 17.6158 16.272C17.2478 15.664 17.0638 14.976 17.0638 14.208C17.0638 12.976 17.5358 12.024 18.4798 11.352C19.4238 10.664 20.8798 10.32 22.8478 10.32H25.4398C25.3598 8.944 24.4398 8.256 22.6797 8.256C22.0558 8.256 21.4238 8.36 20.7838 8.568C20.1438 8.76 19.5998 9.032 19.1518 9.384L17.6158 6.288C18.3358 5.808 19.2078 5.44 20.2318 5.184C21.2718 4.912 22.3118 4.776 23.3518 4.776ZM23.1838 15.336C23.7118 15.336 24.1758 15.208 24.5758 14.952C24.9758 14.696 25.2638 14.32 25.4398 13.824V12.696H23.4718C22.1438 12.696 21.4798 13.136 21.4798 14.016C21.4798 14.416 21.6318 14.736 21.9358 14.976C22.2398 15.216 22.6558 15.336 23.1838 15.336ZM46.3477 4.992L40.7317 18.528C40.0757 20.128 39.2757 21.248 38.3317 21.888C37.3877 22.544 36.2357 22.872 34.8757 22.872C34.1877 22.872 33.4917 22.76 32.7877 22.536C32.0997 22.328 31.5397 22.048 31.1077 21.696L32.6917 18.504C32.9477 18.744 33.2517 18.928 33.6037 19.056C33.9717 19.2 34.3397 19.272 34.7077 19.272C35.1397 19.272 35.4917 19.184 35.7637 19.008C36.0517 18.832 36.2917 18.552 36.4837 18.168L30.9157 4.992H35.5957L38.7877 12.936L42.0037 4.992H46.3477Z\" fill=\"#4200FF\"/>\n      <path d=\"M8.36 1.2C9.88 1.2 11.2 1.456 12.32 1.968C13.44 2.464 14.304 3.184 14.912 4.128C15.52 5.056 15.824 6.152 15.824 7.416C15.824 8.68 15.52 9.776 14.912 10.704C14.304 11.632 13.44 12.352 12.32 12.864C11.2 13.36 9.88 13.608 8.36 13.608H5.432V18H0.68V1.2H8.36ZM8.072 9.864C9.048 9.864 9.784 9.656 10.28 9.24C10.776 8.808 11.024 8.2 11.024 7.416C11.024 6.632 10.776 6.024 10.28 5.592C9.784 5.16 9.048 4.944 8.072 4.944H5.432V9.864H8.072ZM23.3518 4.776C25.5118 4.776 27.1598 5.272 28.2958 6.264C29.4318 7.24 29.9998 8.744 29.9998 10.776V18H25.7518V16.32C25.0958 17.584 23.8158 18.216 21.9118 18.216C20.9038 18.216 20.0318 18.04 19.2958 17.688C18.5598 17.336 17.9998 16.864 17.6158 16.272C17.2478 15.664 17.0638 14.976 17.0638 14.208C17.0638 12.976 17.5358 12.024 18.4798 11.352C19.4238 10.664 20.8798 10.32 22.8478 10.32H25.4398C25.3598 8.944 24.4398 8.256 22.6797 8.256C22.0558 8.256 21.4238 8.36 20.7838 8.568C20.1438 8.76 19.5998 9.032 19.1518 9.384L17.6158 6.288C18.3358 5.808 19.2078 5.44 20.2318 5.184C21.2718 4.912 22.3118 4.776 23.3518 4.776ZM23.1838 15.336C23.7118 15.336 24.1758 15.208 24.5758 14.952C24.9758 14.696 25.2638 14.32 25.4398 13.824V12.696H23.4718C22.1438 12.696 21.4798 13.136 21.4798 14.016C21.4798 14.416 21.6318 14.736 21.9358 14.976C22.2398 15.216 22.6558 15.336 23.1838 15.336ZM46.3477 4.992L40.7317 18.528C40.0757 20.128 39.2757 21.248 38.3317 21.888C37.3877 22.544 36.2357 22.872 34.8757 22.872C34.1877 22.872 33.4917 22.76 32.7877 22.536C32.0997 22.328 31.5397 22.048 31.1077 21.696L32.6917 18.504C32.9477 18.744 33.2517 18.928 33.6037 19.056C33.9717 19.2 34.3397 19.272 34.7077 19.272C35.1397 19.272 35.4917 19.184 35.7637 19.008C36.0517 18.832 36.2917 18.552 36.4837 18.168L30.9157 4.992H35.5957L38.7877 12.936L42.0037 4.992H46.3477Z\" fill=\"#002D69\"/>\n      <path d=\"M50.5745 2.736V9.336H59.2625V10.872H50.5745V18H48.7985V1.2H60.3185V2.736H50.5745ZM65.0236 7.848C65.4236 7 66.0156 6.36 66.7996 5.928C67.5996 5.496 68.5836 5.28 69.7516 5.28V6.936L69.3436 6.912C68.0156 6.912 66.9756 7.32 66.2236 8.136C65.4716 8.952 65.0956 10.096 65.0956 11.568V18H63.3916V5.376H65.0236V7.848ZM72.8369 5.376H74.5409V18H72.8369V5.376ZM73.7009 2.616C73.3489 2.616 73.0529 2.496 72.8129 2.256C72.5729 2.016 72.4529 1.728 72.4529 1.392C72.4529 1.072 72.5729 0.791999 72.8129 0.551999C73.0529 0.311999 73.3489 0.191999 73.7009 0.191999C74.0529 0.191999 74.3489 0.311999 74.5889 0.551999C74.8289 0.775999 74.9489 1.048 74.9489 1.368C74.9489 1.72 74.8289 2.016 74.5889 2.256C74.3489 2.496 74.0529 2.616 73.7009 2.616ZM90.2743 12.216H79.7143C79.8103 13.528 80.3143 14.592 81.2263 15.408C82.1383 16.208 83.2903 16.608 84.6823 16.608C85.4663 16.608 86.1863 16.472 86.8423 16.2C87.4983 15.912 88.0663 15.496 88.5463 14.952L89.5063 16.056C88.9463 16.728 88.2423 17.24 87.3943 17.592C86.5623 17.944 85.6423 18.12 84.6343 18.12C83.3383 18.12 82.1863 17.848 81.1783 17.304C80.1863 16.744 79.4103 15.976 78.8503 15C78.2903 14.024 78.0103 12.92 78.0103 11.688C78.0103 10.456 78.2743 9.352 78.8023 8.376C79.3463 7.4 80.0823 6.64 81.0103 6.096C81.9543 5.552 83.0103 5.28 84.1783 5.28C85.3463 5.28 86.3943 5.552 87.3223 6.096C88.2503 6.64 88.9783 7.4 89.5063 8.376C90.0343 9.336 90.2983 10.44 90.2983 11.688L90.2743 12.216ZM84.1783 6.744C82.9623 6.744 81.9383 7.136 81.1063 7.92C80.2903 8.688 79.8263 9.696 79.7143 10.944H88.6663C88.5543 9.696 88.0823 8.688 87.2503 7.92C86.4343 7.136 85.4103 6.744 84.1783 6.744ZM100.199 5.28C101.783 5.28 103.039 5.744 103.967 6.672C104.911 7.584 105.383 8.92 105.383 10.68V18H103.679V10.848C103.679 9.536 103.351 8.536 102.695 7.848C102.039 7.16 101.103 6.816 99.8866 6.816C98.5266 6.816 97.4466 7.224 96.6466 8.04C95.8626 8.84 95.4706 9.952 95.4706 11.376V18H93.7666V5.376H95.3986V7.704C95.8626 6.936 96.5026 6.344 97.3186 5.928C98.1506 5.496 99.1106 5.28 100.199 5.28ZM121.576 0.191999V18H119.944V15.504C119.432 16.352 118.752 17 117.904 17.448C117.072 17.896 116.128 18.12 115.072 18.12C113.888 18.12 112.816 17.848 111.856 17.304C110.896 16.76 110.144 16 109.6 15.024C109.056 14.048 108.784 12.936 108.784 11.688C108.784 10.44 109.056 9.328 109.6 8.352C110.144 7.376 110.896 6.624 111.856 6.096C112.816 5.552 113.888 5.28 115.072 5.28C116.096 5.28 117.016 5.496 117.832 5.928C118.664 6.344 119.344 6.96 119.872 7.776V0.191999H121.576ZM115.216 16.608C116.096 16.608 116.888 16.408 117.592 16.008C118.312 15.592 118.872 15.008 119.272 14.256C119.688 13.504 119.896 12.648 119.896 11.688C119.896 10.728 119.688 9.872 119.272 9.12C118.872 8.368 118.312 7.792 117.592 7.392C116.888 6.976 116.096 6.768 115.216 6.768C114.32 6.768 113.512 6.976 112.792 7.392C112.088 7.792 111.528 8.368 111.112 9.12C110.712 9.872 110.512 10.728 110.512 11.688C110.512 12.648 110.712 13.504 111.112 14.256C111.528 15.008 112.088 15.592 112.792 16.008C113.512 16.408 114.32 16.608 115.216 16.608ZM129.705 18.12C128.681 18.12 127.697 17.976 126.753 17.688C125.825 17.384 125.097 17.008 124.569 16.56L125.337 15.216C125.865 15.632 126.529 15.976 127.329 16.248C128.129 16.504 128.961 16.632 129.825 16.632C130.977 16.632 131.825 16.456 132.369 16.104C132.929 15.736 133.209 15.224 133.209 14.568C133.209 14.104 133.057 13.744 132.753 13.488C132.449 13.216 132.065 13.016 131.601 12.888C131.137 12.744 130.521 12.608 129.753 12.48C128.729 12.288 127.905 12.096 127.281 11.904C126.657 11.696 126.121 11.352 125.673 10.872C125.241 10.392 125.025 9.728 125.025 8.88C125.025 7.824 125.465 6.96 126.345 6.288C127.225 5.616 128.449 5.28 130.017 5.28C130.833 5.28 131.649 5.392 132.465 5.616C133.281 5.824 133.953 6.104 134.481 6.456L133.737 7.824C132.697 7.104 131.457 6.744 130.017 6.744C128.929 6.744 128.105 6.936 127.545 7.32C127.001 7.704 126.729 8.208 126.729 8.832C126.729 9.312 126.881 9.696 127.185 9.984C127.505 10.272 127.897 10.488 128.361 10.632C128.825 10.76 129.465 10.896 130.281 11.04C131.289 11.232 132.097 11.424 132.705 11.616C133.313 11.808 133.833 12.136 134.265 12.6C134.697 13.064 134.913 13.704 134.913 14.52C134.913 15.624 134.449 16.504 133.521 17.16C132.609 17.8 131.337 18.12 129.705 18.12Z\" fill=\"#4200FF\"/>\n      <path d=\"M50.5745 2.736V9.336H59.2625V10.872H50.5745V18H48.7985V1.2H60.3185V2.736H50.5745ZM65.0236 7.848C65.4236 7 66.0156 6.36 66.7996 5.928C67.5996 5.496 68.5836 5.28 69.7516 5.28V6.936L69.3436 6.912C68.0156 6.912 66.9756 7.32 66.2236 8.136C65.4716 8.952 65.0956 10.096 65.0956 11.568V18H63.3916V5.376H65.0236V7.848ZM72.8369 5.376H74.5409V18H72.8369V5.376ZM73.7009 2.616C73.3489 2.616 73.0529 2.496 72.8129 2.256C72.5729 2.016 72.4529 1.728 72.4529 1.392C72.4529 1.072 72.5729 0.791999 72.8129 0.551999C73.0529 0.311999 73.3489 0.191999 73.7009 0.191999C74.0529 0.191999 74.3489 0.311999 74.5889 0.551999C74.8289 0.775999 74.9489 1.048 74.9489 1.368C74.9489 1.72 74.8289 2.016 74.5889 2.256C74.3489 2.496 74.0529 2.616 73.7009 2.616ZM90.2743 12.216H79.7143C79.8103 13.528 80.3143 14.592 81.2263 15.408C82.1383 16.208 83.2903 16.608 84.6823 16.608C85.4663 16.608 86.1863 16.472 86.8423 16.2C87.4983 15.912 88.0663 15.496 88.5463 14.952L89.5063 16.056C88.9463 16.728 88.2423 17.24 87.3943 17.592C86.5623 17.944 85.6423 18.12 84.6343 18.12C83.3383 18.12 82.1863 17.848 81.1783 17.304C80.1863 16.744 79.4103 15.976 78.8503 15C78.2903 14.024 78.0103 12.92 78.0103 11.688C78.0103 10.456 78.2743 9.352 78.8023 8.376C79.3463 7.4 80.0823 6.64 81.0103 6.096C81.9543 5.552 83.0103 5.28 84.1783 5.28C85.3463 5.28 86.3943 5.552 87.3223 6.096C88.2503 6.64 88.9783 7.4 89.5063 8.376C90.0343 9.336 90.2983 10.44 90.2983 11.688L90.2743 12.216ZM84.1783 6.744C82.9623 6.744 81.9383 7.136 81.1063 7.92C80.2903 8.688 79.8263 9.696 79.7143 10.944H88.6663C88.5543 9.696 88.0823 8.688 87.2503 7.92C86.4343 7.136 85.4103 6.744 84.1783 6.744ZM100.199 5.28C101.783 5.28 103.039 5.744 103.967 6.672C104.911 7.584 105.383 8.92 105.383 10.68V18H103.679V10.848C103.679 9.536 103.351 8.536 102.695 7.848C102.039 7.16 101.103 6.816 99.8866 6.816C98.5266 6.816 97.4466 7.224 96.6466 8.04C95.8626 8.84 95.4706 9.952 95.4706 11.376V18H93.7666V5.376H95.3986V7.704C95.8626 6.936 96.5026 6.344 97.3186 5.928C98.1506 5.496 99.1106 5.28 100.199 5.28ZM121.576 0.191999V18H119.944V15.504C119.432 16.352 118.752 17 117.904 17.448C117.072 17.896 116.128 18.12 115.072 18.12C113.888 18.12 112.816 17.848 111.856 17.304C110.896 16.76 110.144 16 109.6 15.024C109.056 14.048 108.784 12.936 108.784 11.688C108.784 10.44 109.056 9.328 109.6 8.352C110.144 7.376 110.896 6.624 111.856 6.096C112.816 5.552 113.888 5.28 115.072 5.28C116.096 5.28 117.016 5.496 117.832 5.928C118.664 6.344 119.344 6.96 119.872 7.776V0.191999H121.576ZM115.216 16.608C116.096 16.608 116.888 16.408 117.592 16.008C118.312 15.592 118.872 15.008 119.272 14.256C119.688 13.504 119.896 12.648 119.896 11.688C119.896 10.728 119.688 9.872 119.272 9.12C118.872 8.368 118.312 7.792 117.592 7.392C116.888 6.976 116.096 6.768 115.216 6.768C114.32 6.768 113.512 6.976 112.792 7.392C112.088 7.792 111.528 8.368 111.112 9.12C110.712 9.872 110.512 10.728 110.512 11.688C110.512 12.648 110.712 13.504 111.112 14.256C111.528 15.008 112.088 15.592 112.792 16.008C113.512 16.408 114.32 16.608 115.216 16.608ZM129.705 18.12C128.681 18.12 127.697 17.976 126.753 17.688C125.825 17.384 125.097 17.008 124.569 16.56L125.337 15.216C125.865 15.632 126.529 15.976 127.329 16.248C128.129 16.504 128.961 16.632 129.825 16.632C130.977 16.632 131.825 16.456 132.369 16.104C132.929 15.736 133.209 15.224 133.209 14.568C133.209 14.104 133.057 13.744 132.753 13.488C132.449 13.216 132.065 13.016 131.601 12.888C131.137 12.744 130.521 12.608 129.753 12.48C128.729 12.288 127.905 12.096 127.281 11.904C126.657 11.696 126.121 11.352 125.673 10.872C125.241 10.392 125.025 9.728 125.025 8.88C125.025 7.824 125.465 6.96 126.345 6.288C127.225 5.616 128.449 5.28 130.017 5.28C130.833 5.28 131.649 5.392 132.465 5.616C133.281 5.824 133.953 6.104 134.481 6.456L133.737 7.824C132.697 7.104 131.457 6.744 130.017 6.744C128.929 6.744 128.105 6.936 127.545 7.32C127.001 7.704 126.729 8.208 126.729 8.832C126.729 9.312 126.881 9.696 127.185 9.984C127.505 10.272 127.897 10.488 128.361 10.632C128.825 10.76 129.465 10.896 130.281 11.04C131.289 11.232 132.097 11.424 132.705 11.616C133.313 11.808 133.833 12.136 134.265 12.6C134.697 13.064 134.913 13.704 134.913 14.52C134.913 15.624 134.449 16.504 133.521 17.16C132.609 17.8 131.337 18.12 129.705 18.12Z\" fill=\"#2F82DD\"/>\n      </svg>\n  </div>\n  <div class=\"logo--white\">\n    <svg width=\"135\" height=\"23\" viewBox=\"0 0 135 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M8.36 1.2C9.88 1.2 11.2 1.456 12.32 1.968C13.44 2.464 14.304 3.184 14.912 4.128C15.52 5.056 15.824 6.152 15.824 7.416C15.824 8.68 15.52 9.776 14.912 10.704C14.304 11.632 13.44 12.352 12.32 12.864C11.2 13.36 9.88 13.608 8.36 13.608H5.432V18H0.68V1.2H8.36ZM8.072 9.864C9.048 9.864 9.784 9.656 10.28 9.24C10.776 8.808 11.024 8.2 11.024 7.416C11.024 6.632 10.776 6.024 10.28 5.592C9.784 5.16 9.048 4.944 8.072 4.944H5.432V9.864H8.072ZM23.3518 4.776C25.5118 4.776 27.1598 5.272 28.2958 6.264C29.4318 7.24 29.9998 8.744 29.9998 10.776V18H25.7518V16.32C25.0958 17.584 23.8158 18.216 21.9118 18.216C20.9038 18.216 20.0318 18.04 19.2958 17.688C18.5598 17.336 17.9998 16.864 17.6158 16.272C17.2478 15.664 17.0638 14.976 17.0638 14.208C17.0638 12.976 17.5358 12.024 18.4798 11.352C19.4238 10.664 20.8798 10.32 22.8478 10.32H25.4398C25.3598 8.944 24.4398 8.256 22.6797 8.256C22.0558 8.256 21.4238 8.36 20.7838 8.568C20.1438 8.76 19.5998 9.032 19.1518 9.384L17.6158 6.288C18.3358 5.808 19.2078 5.44 20.2318 5.184C21.2718 4.912 22.3118 4.776 23.3518 4.776ZM23.1838 15.336C23.7118 15.336 24.1758 15.208 24.5758 14.952C24.9758 14.696 25.2638 14.32 25.4398 13.824V12.696H23.4718C22.1438 12.696 21.4798 13.136 21.4798 14.016C21.4798 14.416 21.6318 14.736 21.9358 14.976C22.2398 15.216 22.6558 15.336 23.1838 15.336ZM46.3477 4.992L40.7317 18.528C40.0757 20.128 39.2757 21.248 38.3317 21.888C37.3877 22.544 36.2357 22.872 34.8757 22.872C34.1877 22.872 33.4917 22.76 32.7877 22.536C32.0997 22.328 31.5397 22.048 31.1077 21.696L32.6917 18.504C32.9477 18.744 33.2517 18.928 33.6037 19.056C33.9717 19.2 34.3397 19.272 34.7077 19.272C35.1397 19.272 35.4917 19.184 35.7637 19.008C36.0517 18.832 36.2917 18.552 36.4837 18.168L30.9157 4.992H35.5957L38.7877 12.936L42.0037 4.992H46.3477ZM50.5745 2.736V9.336H59.2625V10.872H50.5745V18H48.7985V1.2H60.3185V2.736H50.5745ZM65.0236 7.848C65.4236 7 66.0156 6.36 66.7996 5.928C67.5996 5.496 68.5836 5.28 69.7516 5.28V6.936L69.3436 6.912C68.0156 6.912 66.9756 7.32 66.2236 8.136C65.4716 8.952 65.0956 10.096 65.0956 11.568V18H63.3916V5.376H65.0236V7.848ZM72.8369 5.376H74.5409V18H72.8369V5.376ZM73.7009 2.616C73.3489 2.616 73.0529 2.496 72.8129 2.256C72.5729 2.016 72.4529 1.728 72.4529 1.392C72.4529 1.072 72.5729 0.791999 72.8129 0.551999C73.0529 0.311999 73.3489 0.191999 73.7009 0.191999C74.0529 0.191999 74.3489 0.311999 74.5889 0.551999C74.8289 0.775999 74.9489 1.048 74.9489 1.368C74.9489 1.72 74.8289 2.016 74.5889 2.256C74.3489 2.496 74.0529 2.616 73.7009 2.616ZM90.2743 12.216H79.7143C79.8103 13.528 80.3143 14.592 81.2263 15.408C82.1383 16.208 83.2903 16.608 84.6823 16.608C85.4663 16.608 86.1863 16.472 86.8423 16.2C87.4983 15.912 88.0663 15.496 88.5463 14.952L89.5063 16.056C88.9463 16.728 88.2423 17.24 87.3943 17.592C86.5623 17.944 85.6423 18.12 84.6343 18.12C83.3383 18.12 82.1863 17.848 81.1783 17.304C80.1863 16.744 79.4103 15.976 78.8503 15C78.2903 14.024 78.0103 12.92 78.0103 11.688C78.0103 10.456 78.2743 9.352 78.8023 8.376C79.3463 7.4 80.0823 6.64 81.0103 6.096C81.9543 5.552 83.0103 5.28 84.1783 5.28C85.3463 5.28 86.3943 5.552 87.3223 6.096C88.2503 6.64 88.9783 7.4 89.5063 8.376C90.0343 9.336 90.2983 10.44 90.2983 11.688L90.2743 12.216ZM84.1783 6.744C82.9623 6.744 81.9383 7.136 81.1063 7.92C80.2903 8.688 79.8263 9.696 79.7143 10.944H88.6663C88.5543 9.696 88.0823 8.688 87.2503 7.92C86.4343 7.136 85.4103 6.744 84.1783 6.744ZM100.199 5.28C101.783 5.28 103.039 5.744 103.967 6.672C104.911 7.584 105.383 8.92 105.383 10.68V18H103.679V10.848C103.679 9.536 103.351 8.536 102.695 7.848C102.039 7.16 101.103 6.816 99.8866 6.816C98.5266 6.816 97.4466 7.224 96.6466 8.04C95.8626 8.84 95.4706 9.952 95.4706 11.376V18H93.7666V5.376H95.3986V7.704C95.8626 6.936 96.5026 6.344 97.3186 5.928C98.1506 5.496 99.1106 5.28 100.199 5.28ZM121.576 0.191999V18H119.944V15.504C119.432 16.352 118.752 17 117.904 17.448C117.072 17.896 116.128 18.12 115.072 18.12C113.888 18.12 112.816 17.848 111.856 17.304C110.896 16.76 110.144 16 109.6 15.024C109.056 14.048 108.784 12.936 108.784 11.688C108.784 10.44 109.056 9.328 109.6 8.352C110.144 7.376 110.896 6.624 111.856 6.096C112.816 5.552 113.888 5.28 115.072 5.28C116.096 5.28 117.016 5.496 117.832 5.928C118.664 6.344 119.344 6.96 119.872 7.776V0.191999H121.576ZM115.216 16.608C116.096 16.608 116.888 16.408 117.592 16.008C118.312 15.592 118.872 15.008 119.272 14.256C119.688 13.504 119.896 12.648 119.896 11.688C119.896 10.728 119.688 9.872 119.272 9.12C118.872 8.368 118.312 7.792 117.592 7.392C116.888 6.976 116.096 6.768 115.216 6.768C114.32 6.768 113.512 6.976 112.792 7.392C112.088 7.792 111.528 8.368 111.112 9.12C110.712 9.872 110.512 10.728 110.512 11.688C110.512 12.648 110.712 13.504 111.112 14.256C111.528 15.008 112.088 15.592 112.792 16.008C113.512 16.408 114.32 16.608 115.216 16.608ZM129.705 18.12C128.681 18.12 127.697 17.976 126.753 17.688C125.825 17.384 125.097 17.008 124.569 16.56L125.337 15.216C125.865 15.632 126.529 15.976 127.329 16.248C128.129 16.504 128.961 16.632 129.825 16.632C130.977 16.632 131.825 16.456 132.369 16.104C132.929 15.736 133.209 15.224 133.209 14.568C133.209 14.104 133.057 13.744 132.753 13.488C132.449 13.216 132.065 13.016 131.601 12.888C131.137 12.744 130.521 12.608 129.753 12.48C128.729 12.288 127.905 12.096 127.281 11.904C126.657 11.696 126.121 11.352 125.673 10.872C125.241 10.392 125.025 9.728 125.025 8.88C125.025 7.824 125.465 6.96 126.345 6.288C127.225 5.616 128.449 5.28 130.017 5.28C130.833 5.28 131.649 5.392 132.465 5.616C133.281 5.824 133.953 6.104 134.481 6.456L133.737 7.824C132.697 7.104 131.457 6.744 130.017 6.744C128.929 6.744 128.105 6.936 127.545 7.32C127.001 7.704 126.729 8.208 126.729 8.832C126.729 9.312 126.881 9.696 127.185 9.984C127.505 10.272 127.897 10.488 128.361 10.632C128.825 10.76 129.465 10.896 130.281 11.04C131.289 11.232 132.097 11.424 132.705 11.616C133.313 11.808 133.833 12.136 134.265 12.6C134.697 13.064 134.913 13.704 134.913 14.52C134.913 15.624 134.449 16.504 133.521 17.16C132.609 17.8 131.337 18.12 129.705 18.12Z\" fill=\"#F8F8F8\"/>\n      </svg>\n  </div>\n\n</div>"
        },
        {
            "name": "ModalPaymentComponent",
            "id": "component-ModalPaymentComponent-b44f09d70455ac6c8a169d60c3cd752198667b5148ed6c9f60e89c9b84859a7187dbef629b04a652ed5b1ad9ca441b3aa24436785555790682643554ddeb2c3a",
            "file": "src/app/components/organisms/modal-payment/modal-payment.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal-payment",
            "styleUrls": [
                "./modal-payment.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./modal-payment.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'Adicionar pagamento'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "callback",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "formValue",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "onClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onKeyUp",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-modal-payment',\n  templateUrl: './modal-payment.component.html',\n  styleUrls: ['./modal-payment.component.scss']\n})\nexport class ModalPaymentComponent {\n\n  formValue: object = {}\n\n  @Input()\n  title: string = 'Adicionar pagamento'\n\n  @Input()\n  disabled: boolean = true\n\n  @Output() callback = new EventEmitter<any>();\n\n  onClose(){\n    this.callback.emit()\n  }\n\n  onKeyUp(value){\n    this.formValue = {...this.formValue, ...value}\n  }\n\n  onSubmit(event){\n    event.preventDefault()\n    this.onClose()\n    this.callback.emit(this.formValue)\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".modal-payment {\n  &__content {\n    padding: 2rem;\n    background-color: #fff;\n    width: 95vw;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 3;\n    display: grid;\n    gap: 2rem;\n\n    @media (min-width: 768px) {\n      max-width: 77.7rem;\n      padding: 4rem;\n      gap: 5rem;\n    }\n  }\n\n  &__inputs {\n    display: grid;\n    gap: 1rem;\n    margin-bottom: 3.3rem;\n\n    @media (min-width: 768px) {\n      grid-template-columns: 1fr 1fr;\n      gap: 4rem;\n      margin-bottom: 6.3rem;\n    }\n  }\n\n  &__button {\n    display: grid;\n    flex-wrap: nowrap;\n    justify-items: center;\n    justify-content: flex-end;\n    gap: 1rem;\n\n    @media (min-width: 768px) {\n      grid-template-columns: auto auto;\n      gap: 3rem;\n    }\n  }\n\n  &__overflow {\n    background-color: #00000080;\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 2;\n  }\n\n  &.disabled {\n    display: none;\n    pointer-events: none;\n  }\n}\n",
                    "styleUrl": "./modal-payment.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"modal-payment\" *ngIf=\"!disabled\">\n  <div  class=\"modal-payment__content\">\n    <app-title size=\"small\" [title]=\"title\"></app-title>\n    <form (submit)=\"onSubmit($event)\">\n      <div class=\"modal-payment__inputs\">\n        <app-input placeholder=\"Usuario*\" (typing)=\"onKeyUp($event)\" id=\"usuario\"></app-input>\n        <app-input placeholder=\"Valor*\" (typing)=\"onKeyUp($event)\" id=\"valor\"></app-input>\n        <app-input placeholder=\"Data*\" (typing)=\"onKeyUp($event)\" id=\"data\"></app-input>\n        <app-input placeholder=\"Titulo*\" (typing)=\"onKeyUp($event)\" id=\"titulo\"></app-input>\n      </div>\n      <div class=\"modal-payment__button\">\n        <app-button [primary]=\"false\" label=\"cancelar\" (click)=\"onClose()\" ></app-button>\n        <app-button label=\"salvar\" type=\"submit\"></app-button>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-payment__overflow\" (click)=\"onClose()\"></div>\n</div>\n"
        },
        {
            "name": "PaymentListComponent",
            "id": "component-PaymentListComponent-940c47d15f01c3e594251615b7ced6b23e265dfe700d0597723b29b0243defdd7630656e7a2c3a128ea31229ee61683cb46e09fc8fe1ce55f891c83ebf47747e",
            "file": "src/app/components/organisms/payment-list/payment-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-payment-list",
            "styleUrls": [
                "./payment-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./payment-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "limit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "callback",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                },
                {
                    "name": "callbackEvent",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "infoPayment",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "inputValue",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "selectList",
                    "defaultValue": "['5', '10', '20']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "edit",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onPagination",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelected",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n@Component({\n  selector: 'app-payment-list',\n  templateUrl: './payment-list.component.html',\n  styleUrls: ['./payment-list.component.scss']\n})\nexport class PaymentListComponent {\n\n  selectList = ['5', '10', '20']\n\n  infoPayment = {}\n\n  inputValue: object = {}\n  \n  @Input()\n  dataSource\n  \n  @Input()\n  limit: number\n  \n  @Output() callback = new EventEmitter<any>();\n\n  @Output() callbackEvent = new EventEmitter<any>();\n\n  constructor(){}\n\n  onSelected(value){\n    this.infoPayment = {...this.infoPayment, limit: value}\n    this.limit = parseInt(value)\n    !!this.callback && this.callback.emit(this.infoPayment)\n  }\n  \n  onPagination(value){\n    this.infoPayment = {...this.infoPayment, offset: value}\n    !!this.callback && this.callback.emit(this.infoPayment)\n  }\n\n  onChange(value){\n    this.inputValue = {...this.inputValue, ...value}\n  }\n\n  edit(value){\n    !!this.callbackEvent && this.callbackEvent.emit({type: 'edit', data: value })\n  }\n\n  delete(id){\n    !!this.callbackEvent && this.callbackEvent.emit({type: 'delete', data: id })\n  }\n\n  onSubmit(event){\n    event.preventDefault()\n    this.callback.emit(this.inputValue)\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".payment-list {\n  width: 100%;\n  background-color: #fff;\n  box-shadow: 0px 0.2rem 0.4rem rgba(4, 38, 82, 0.06);\n  border-radius: 0.8rem;\n  overflow: hidden;\n  &__head {\n    width: 100%;\n    height: 6.4rem;\n    padding: 1.6rem 1.4rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: nowrap;\n  }\n\n  &__form {\n    display: grid;\n    grid-template-columns: 21.5rem auto;\n    gap: 1rem;\n    justify-content: flex-start;\n    align-items: center;\n    flex: 0 1 50%;\n  }\n  &__pagination {\n    display: grid;\n    grid-template-columns: auto 1fr;\n    gap: 1rem;\n    justify-content: flex-end;\n    align-items: center;\n    flex: 0 0 auto;\n  }\n\n  &__table {\n    flex: 0 0 100%;\n    width: 100%;\n  }\n}\n",
                    "styleUrl": "./payment-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "templateData": "<div class=\"payment-list\">\n  <div class=\"payment-list__head\">\n    <form class=\"payment-list__form\" (submit)=\"onSubmit($event)\">\n      <app-input styleInput=\"search\" placeholder=\"Pesquisar por usuário\" icon=\"search\" (typing)=\"onChange($event)\" id=\"search\"></app-input>\n      <app-button size=\"small\" label=\"filter\" icon=\"tune\" type=\"submit\" [primary]=\"false\"></app-button>\n    </form>\n    <div class=\"payment-list__pagination\">\n      <app-select label=\"Exibir\" id=\"search\" defaultSelected=\"{{limit}}\" [items]=\"selectList\" (callback)=\"onSelected($event)\"></app-select>\n      <app-count-page [total]=\"dataSource.total\" [limit]=\"limit\" (trigger)=\"onPagination($event)\"></app-count-page>\n    </div>\n  </div>\n  <div class=\"payment-list__table\">\n    <app-table \n    [list]=\"dataSource?.list\"\n    [tableHead]=\"dataSource?.tableHead\"\n    (callbackEdit)=\"edit($event)\"\n    (callbackDelete)=\"delete($event)\"\n    ></app-table>\n  </div>\n</div>"
        },
        {
            "name": "SelectComponent",
            "id": "component-SelectComponent-26c85f081a4378db5b5fb2bdf12293ca8e51e880d1e1cdb13e0487360b1de01e059ba616be565b68aa8a303663d5fe65b256146145b1d7e0df7d44a30b986d8f",
            "file": "src/app/components/atoms/select/select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select",
            "styleUrls": [
                "./select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "defaultSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "callback",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss']\n})\nexport class SelectComponent {\n\n  @Input()\n  defaultSelected: number\n  \n  @Input()\n  items: string[]\n  \n  @Input()\n  id: string\n  \n  @Input()\n  name: string\n  \n  @Input()\n  label: string\n  \n  @Output() callback = new EventEmitter<any>();\n  \n  ngOnInit(){\n \n  }\n\n  onChange(event) {\n    const target = (<HTMLInputElement>event.target)\n    !!this.callback && this.callback.emit(target.value);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".select {\n  display: flex;\n  align-items: center;\n  width: auto;\n  &__container {\n    width: 7.7rem;\n    position: relative;\n    border: 1px solid #cfdce5;\n    border-radius: 6px;\n  }\n  &--arrow {\n    position: absolute;\n    right: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    pointer-events: none;\n  }\n  label {\n    margin-right: 0.8rem;\n    color: #69788c;\n    font-family: \"Lato\";\n    font-size: 1.2rem;\n    font-weight: 500;\n  }\n  select {\n    border: 0;\n    color: #2d3540;\n    padding: 0.7rem;\n    appearance: none;\n    background-color: transparent;\n    width: 100%;\n    height: 100%;\n    outline: none;\n    cursor: pointer;\n  }\n}\n",
                    "styleUrl": "./select.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"select\">\n  <label for=\"{{ id }}\" *ngIf=\"label\">{{ label }}</label>\n  <div class=\"select__container\">\n    <select name=\"{{ name }}\" id=\"{{ id }}\" (change)=\"onChange($event)\">\n      <option *ngFor=\"let item of items\" value=\"{{ item }}\" [selected]=\"defaultSelected === item\">{{ item }}</option>\n    </select>\n    <span class=\"material-icons select--arrow\">\n      expand_more\n    </span>\n  </div>\n</div>\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-d229720cb39860af542c3c2d3b2e716e2d28c5d82fc8fa7e00a5944f43141ab3741a418b985bed4218c808c961b229627055bebd837a6c1edf9d1f2ebeca51fb",
            "file": "src/app/components/molecules/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [
                "./table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "list",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "object[]",
                    "decorators": []
                },
                {
                    "name": "tableHead",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "callback",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                },
                {
                    "name": "callbackDelete",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                },
                {
                    "name": "callbackEdit",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                },
                {
                    "name": "listItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "listItem",
                    "args": [
                        {
                            "name": "items",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Output",
                            "stringifiedArguments": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onCheck",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDelete",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onEdit",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\n\nexport class TableComponent {\n\n  @Input()\n  list: object[]\n  \n  @Input()\n  tableHead: string[]\n\n  @Output()\n\n  \n  listItem(items){\n    return items.items\n  }\n  \n  @Output() callback = new EventEmitter<any>();\n\n  @Output() callbackEdit = new EventEmitter<any>();\n\n  @Output() callbackDelete = new EventEmitter<any>();\n\n  onClick(event) {\n    !!this.callback && this.callback.emit(event);\n  }\n\n  onEdit(event) {\n    !!this.callbackEdit && this.callbackEdit.emit(event['data-id']);\n  }\n\n  onDelete(event) {\n    !!this.callbackDelete && this.callbackDelete.emit(event['data-id']);\n  }\n\n  onCheck(event){\n    !!this.callbackEdit && this.callbackEdit.emit(event);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".table {\n  overflow: auto;\n  table {\n    width: 100%;\n    background-color: #fff;\n    border-collapse: collapse;\n  }\n\n  &__title {\n    border-bottom: 2px solid #cfdce5;\n    text-align: left;\n    font-size: 1.4rem;\n    line-height: 1.7rem;\n    color: #2d3540;\n    font-weight: 700;\n\n    &-container {\n      display: flex;\n      flex-wrap: nowrap;\n      justify-content: flex-start;\n      align-items: center;\n      padding: 1.7rem 1.2rem;\n      min-width: 11rem;\n\n      @media (min-width: 768px) {\n        min-width: inherit;\n      }\n    }\n\n    &-icon {\n      color: #2d3540;\n      font-size: 1.6rem;\n    }\n  }\n\n  &__column {\n    &:nth-child(2n) {\n      background-color: #f5f8fa;\n    }\n  }\n  &__row {\n    justify-content: flex-start;\n    align-items: center;\n    height: 8rem;\n    padding: 1.2rem;\n  }\n\n  &__button {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding: 3rem;\n    gap: 2rem;\n  }\n}\n",
                    "styleUrl": "./table.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"table\">\n  <table>\n    <thead class=\"table__head\">\n      <tr class=\"table__title\">\n        <th *ngFor=\"let itemHead of tableHead\">\n          <div class=\"table__title-container\">\n            <span>\n              {{ itemHead }}\n            </span>\n            <span class=\"material-icons table__title-icon\">\n              unfold_more\n            </span>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody class=\"table__body\">\n      <tr class=\"table__column\" *ngFor=\"let items of list; index as i\">\n        <td class=\"table__row\" *ngFor=\"let item of listItem(items); index as j\">\n          <app-item-list *ngIf=\"item.item !== true && item.item !== false\" item=\"{{ item.item }}\" subItem=\"{{ item.subItem }}\"></app-item-list>\n          <app-checkbox *ngIf=\"item.item === true || item.item === false\" [checked]=\"item.item\" id=\"{{ items.id }}\" (check)=\"onCheck($event)\"></app-checkbox>\n        </td>\n        <td>\n          <div class=\"table__button\">\n            <app-icon-button name=\"edit\" attrData=\"{{ items.id }}\" (callback)=\"onEdit($event)\"></app-icon-button>\n            <app-icon-button name=\"highlight_off\" attrData=\"{{ items.id }}\" (callback)=\"onDelete($event)\"></app-icon-button>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n"
        },
        {
            "name": "TitleComponent",
            "id": "component-TitleComponent-67ac7896ec1267068a1e6b0027f2909786870b16fe7d61cfe2cd624778b3a2abe5c6982494fc3b22996545900475161bec98ec6d59f32cfba04e750b703781de",
            "file": "src/app/components/atoms/title/title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-title",
            "styleUrls": [
                "./title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./title.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss']\n})\nexport class TitleComponent {\n\n  @Input() title: string\n\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  public get classes(): string[] {\n\n    return ['title', `title--${this.size}`];\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".title {\n  font-family: \"Montserrat\";\n  &--small {\n    font-size: 1.8rem;\n    font-weight: 700;\n    line-height: 2.2rem;\n  }\n\n  &--medium {\n    font-size: 3rem;\n    font-weight: 600;\n    line-height: 3.6rem;\n  }\n\n  &--large {\n    font-size: 3.6rem;\n    font-weight: 600;\n    line-height: 4.4rem;\n  }\n}\n",
                    "styleUrl": "./title.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<h1 [ngClass]=\"classes\">{{ title }}</h1>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-874ff719ce2cce77bf2133b095ca4e733dc763c0d79a603a1e9a80866297fc247f52ea4566f138eea966a1240520dadea9e72eef413cf37be9f4b46781828391",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppComponent } from './app.component';\n\nimport { AuthService } from './services/auth/auth.service';\nimport { UserService } from './middleware/user.service';\nimport { ApiService } from './api/api.service';\nimport { AuthGuard } from './guards/auth.guards';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AtomsModule } from './components/atoms/atoms.module';\nimport { MoleculesModule } from './components/molecules/molecules.module';\nimport { OrganismsModule } from './components/organisms/organisms.module';\nimport { LoginModule } from './components/pages/login/login.module';\nimport { HomeModule } from './components/pages/home/home.module';\nimport { TasksService } from './middleware/tasks.service';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    LoginModule,\n    HomeModule,\n    AtomsModule,\n    MoleculesModule,\n    OrganismsModule,\n  ],\n  providers: [\n    AuthService,\n    ApiService,\n    UserService,\n    AuthGuard,\n    TasksService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "ApiService"
                        },
                        {
                            "name": "AuthService"
                        },
                        {
                            "name": "TasksService"
                        },
                        {
                            "name": "UserService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "AtomsModule"
                        },
                        {
                            "name": "HomeModule"
                        },
                        {
                            "name": "LoginModule"
                        },
                        {
                            "name": "MoleculesModule"
                        },
                        {
                            "name": "OrganismsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-f34f6cb2be25cd8ddc2a040bb049269496d742bfa737bf1ac65966e22fa607c3cfc29966dbeffe09b4dc860774565405ff6b62b7a093d4fedfc0fbe36972b8a0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/pages/home/home.component';\nimport { LoginComponent } from './components/pages/login/login.component';\nimport { AuthGuard } from './guards/auth.guards';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent,\n  canActivate: [AuthGuard], },\n  { path: '', component: HomeComponent,\n    canActivate: [AuthGuard],\n    canLoad: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AtomsModule",
            "id": "module-AtomsModule-ca7bf95b1df59af4c24ebbbbd416a4d9e511b182b17cac493e41412a15c907f3a0d4bb80fc57ba12b3a2ddbe4a1d890b36185a37fa7f8a312c63ddb8b2ba40e1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/atoms/atoms.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from './logo/logo.component';\nimport { ImageComponent } from './image/image.component';\nimport { InputComponent } from './input/input.component';\nimport { ButtonComponent } from './button/button.component';\nimport { TitleComponent } from './title/title.component';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { IconButtonComponent } from './icon-button/icon-button.component';\nimport { SelectComponent } from './select/select.component';\nimport { ItemListComponent } from './item-list/item-list.component';\n\n@NgModule({\n  declarations: [LogoComponent, ImageComponent, InputComponent, ButtonComponent, TitleComponent, CheckboxComponent, IconButtonComponent, SelectComponent, ItemListComponent],\n  exports: [LogoComponent, ImageComponent, InputComponent, ButtonComponent, TitleComponent, CheckboxComponent, IconButtonComponent, SelectComponent, ItemListComponent],\n  imports: [\n    CommonModule\n  ]\n})\nexport class AtomsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "IconButtonComponent"
                        },
                        {
                            "name": "ImageComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "ItemListComponent"
                        },
                        {
                            "name": "LogoComponent"
                        },
                        {
                            "name": "SelectComponent"
                        },
                        {
                            "name": "TitleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "IconButtonComponent"
                        },
                        {
                            "name": "ImageComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "ItemListComponent"
                        },
                        {
                            "name": "LogoComponent"
                        },
                        {
                            "name": "SelectComponent"
                        },
                        {
                            "name": "TitleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeModule",
            "id": "module-HomeModule-654064d5e4b45f145a9af374950552dec9481700dec2c5024ca7380e15f2c89be37d3c7e07ede4ae0a7c1bd9ac392b81aca1798dabd67e5cb9d76be34383e5ac",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/pages/home/home.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport { AtomsModule } from '../../atoms/atoms.module';\nimport { MoleculesModule } from '../../molecules/molecules.module';\nimport { OrganismsModule } from '../../organisms/organisms.module';\n\n@NgModule({\n  declarations: [HomeComponent],\n  exports: [HomeComponent],\n  imports: [\n    CommonModule,\n    AtomsModule,\n    MoleculesModule,\n    OrganismsModule\n  ]\n})\nexport class HomeModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AtomsModule"
                        },
                        {
                            "name": "MoleculesModule"
                        },
                        {
                            "name": "OrganismsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoginModule",
            "id": "module-LoginModule-134e74c50ecc1a38c1281afc216845df1c17f40fe0d12354822657148ef2ace7b12d3fa1540ddf396416d64127f5eb7bacc9645982da47ffa6e37d215f6651d8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/pages/login/login.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport { AtomsModule } from '../../atoms/atoms.module';\nimport { MoleculesModule } from '../../molecules/molecules.module';\nimport { OrganismsModule } from '../../organisms/organisms.module';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n  ],\n  exports: [LoginComponent],\n  imports: [\n    CommonModule,\n    AtomsModule,\n    MoleculesModule,\n    OrganismsModule\n  ],\n})\nexport class LoginModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoginComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AtomsModule"
                        },
                        {
                            "name": "MoleculesModule"
                        },
                        {
                            "name": "OrganismsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LoginComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MoleculesModule",
            "id": "module-MoleculesModule-3da38bac300f510931be93e35f21c587dacfe91f141b56e1c343615dec6151dcdddde6407bb0a0ae372a70d2353901de9cfda585b46ae87b8d76497b13432605",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/molecules/molecules.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormLoginComponent } from './form-login/form-login.component';\nimport { HeaderComponent } from './header/header.component';\nimport { TableComponent } from './table/table.component';\nimport { CountPageComponent } from './count-page/count-page.component';\n\nimport { AtomsModule } from '../atoms/atoms.module';\n\n@NgModule({\n  declarations: [FormLoginComponent, HeaderComponent, TableComponent, CountPageComponent],\n  exports: [FormLoginComponent, HeaderComponent, TableComponent, CountPageComponent],\n  imports: [\n    CommonModule,\n    AtomsModule\n  ]\n})\nexport class MoleculesModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CountPageComponent"
                        },
                        {
                            "name": "FormLoginComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "TableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AtomsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CountPageComponent"
                        },
                        {
                            "name": "FormLoginComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "TableComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OrganismsModule",
            "id": "module-OrganismsModule-81ad9ef6a185cde91c2857ac8b68041ad60cd230f7cd86b1004d22f36d38236ca04d8917f35a58877a114ade652298fba47624b84c8090d0341bcf6b015089b6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/organisms/organisms.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { MoleculesModule } from '../molecules/molecules.module';\nimport { AtomsModule } from '../atoms/atoms.module';\nimport { PaymentListComponent } from './payment-list/payment-list.component';\nimport { ModalPaymentComponent } from './modal-payment/modal-payment.component';\n\n@NgModule({\n  declarations: [LoginComponent, PaymentListComponent, ModalPaymentComponent],\n  exports: [LoginComponent, PaymentListComponent, ModalPaymentComponent],\n  imports: [\n    CommonModule,\n    AtomsModule,\n    MoleculesModule\n  ]\n})\nexport class OrganismsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ModalPaymentComponent"
                        },
                        {
                            "name": "PaymentListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AtomsModule"
                        },
                        {
                            "name": "MoleculesModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ModalPaymentComponent"
                        },
                        {
                            "name": "PaymentListComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Checked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/image/image.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/logo/logo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/item-list/item-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/title/title.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/molecules/count-page/count-page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/molecules/form-login/form-login.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/molecules/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/molecules/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/organisms/login/login.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/organisms/payment-list/payment-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/organisms/modal-payment/modal-payment.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Delete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/icon-button/icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Edit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/icon-button/icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Last",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/molecules/count-page/count-page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Middle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/molecules/count-page/count-page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Mobile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/organisms/modal-payment/modal-payment.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "Responsive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/molecules/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SubItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/item-list/item-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/icon-button/icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<IconButtonComponent>",
                "defaultValue": "(args: IconButtonComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CheckboxComponent>",
                "defaultValue": "(args: CheckboxComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/image/image.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ImageComponent>",
                "defaultValue": "(args: ImageComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputComponent>",
                "defaultValue": "(args: InputComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/logo/logo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LogoComponent>",
                "defaultValue": "(args: LogoComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/item-list/item-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ItemListComponent>",
                "defaultValue": "(args: ItemListComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/select/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SelectComponent>",
                "defaultValue": "(args: SelectComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/title/title.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TitleComponent>",
                "defaultValue": "(args: TitleComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/molecules/count-page/count-page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CountPageComponent>",
                "defaultValue": "(args: CountPageComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/molecules/form-login/form-login.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FormLoginComponent>",
                "defaultValue": "(args: FormLoginComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/molecules/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TableComponent>",
                "defaultValue": "(args: TableComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/molecules/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<HeaderComponent>",
                "defaultValue": "(args: HeaderComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/organisms/login/login.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LoginComponent>",
                "defaultValue": "(args: LoginComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/organisms/payment-list/payment-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PaymentListComponent>",
                "defaultValue": "(args: PaymentListComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/organisms/modal-payment/modal-payment.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ModalPaymentComponent>",
                "defaultValue": "(args: ModalPaymentComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "White",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/atoms/logo/logo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/components/atoms/checkbox/checkbox.stories.ts": [
                {
                    "name": "Checked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CheckboxComponent>",
                    "defaultValue": "(args: CheckboxComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/app/components/atoms/image/image.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/image/image.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/image/image.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ImageComponent>",
                    "defaultValue": "(args: ImageComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/atoms/input/input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputComponent>",
                    "defaultValue": "(args: InputComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/atoms/logo/logo.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/logo/logo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/logo/logo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LogoComponent>",
                    "defaultValue": "(args: LogoComponent) => ({\n  props: args,\n})"
                },
                {
                    "name": "White",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/logo/logo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/components/atoms/item-list/item-list.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/item-list/item-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SubItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/item-list/item-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/item-list/item-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ItemListComponent>",
                    "defaultValue": "(args: ItemListComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/atoms/select/select.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/select/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SelectComponent>",
                    "defaultValue": "(args: SelectComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/atoms/title/title.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/title/title.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/title/title.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TitleComponent>",
                    "defaultValue": "(args: TitleComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/molecules/count-page/count-page.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/molecules/count-page/count-page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Last",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/molecules/count-page/count-page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Middle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/molecules/count-page/count-page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/molecules/count-page/count-page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CountPageComponent>",
                    "defaultValue": "(args: CountPageComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/molecules/form-login/form-login.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/molecules/form-login/form-login.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/molecules/form-login/form-login.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FormLoginComponent>",
                    "defaultValue": "(args: FormLoginComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/molecules/table/table.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/molecules/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Responsive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/molecules/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/molecules/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TableComponent>",
                    "defaultValue": "(args: TableComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/molecules/header/header.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/molecules/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/molecules/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<HeaderComponent>",
                    "defaultValue": "(args: HeaderComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/organisms/login/login.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/organisms/login/login.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/organisms/login/login.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LoginComponent>",
                    "defaultValue": "(args: LoginComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/organisms/payment-list/payment-list.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/organisms/payment-list/payment-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/organisms/payment-list/payment-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PaymentListComponent>",
                    "defaultValue": "(args: PaymentListComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/organisms/modal-payment/modal-payment.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/organisms/modal-payment/modal-payment.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Mobile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/organisms/modal-payment/modal-payment.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/organisms/modal-payment/modal-payment.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ModalPaymentComponent>",
                    "defaultValue": "(args: ModalPaymentComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/atoms/icon-button/icon-button.stories.ts": [
                {
                    "name": "Delete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/icon-button/icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Edit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/icon-button/icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/icon-button/icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<IconButtonComponent>",
                    "defaultValue": "(args: IconButtonComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/app/components/atoms/button/button.stories.ts": [
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/atoms/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "login",
                        "component": "LoginComponent",
                        "canActivate": [
                            "AuthGuard"
                        ]
                    },
                    {
                        "path": "",
                        "component": "HomeComponent",
                        "canActivate": [
                            "AuthGuard"
                        ],
                        "canLoad": [
                            "AuthGuard"
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/api.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/api.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApiService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icon-button/icon-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icon-button/icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icon-button/icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Edit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icon-button/icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/image/image.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/image/image.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/image/image.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/item-list/item-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/item-list/item-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/item-list/item-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SubItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/item-list/item-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/logo/logo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/logo/logo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/logo/logo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/logo/logo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "White",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/select/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/title/title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/title/title.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/title/title.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/count-page/count-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CountPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/count-page/count-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/count-page/count-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Last",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/count-page/count-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Middle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/count-page/count-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/form-login/form-login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormLoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/form-login/form-login.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/form-login/form-login.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Responsive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/login/login.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/login/login.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/modal-payment/modal-payment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalPaymentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/modal-payment/modal-payment.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/modal-payment/modal-payment.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Mobile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/modal-payment/modal-payment.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/payment-list/payment-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaymentListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/payment-list/payment-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/payment-list/payment-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/components/pages/home/home.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Data",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/pages/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/auth.guards.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/middleware/tasks.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TasksService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/middleware/user.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/middleware/user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/auth/auth.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}