include:
  - project: 'globocom/gitlab-ci-files'
    ref: master
    file: '/templates/gitlab-ci-basic.yml'
  - project: 'globocom/gitlab-ci-files'
    ref: master
    file: '/templates/jobs/tsuru-deploy.yml'

stages:
  - test
  - codeQuality
  - build
  - deploy

variables:
  NODE_VERSION: 12.22.1

lint:
  stage: test
  image: docker.artifactory.globoi.com/devops/python-node-workspace:v5
  before_script:
    - source $NVM_DIR/nvm.sh
    - nvm install $NODE_VERSION
    - nvm use $NODE_VERSION
    - npm install
  script:
    - npm run lint

test:
  image: docker.artifactory.globoi.com/devops/python-node-workspace:v5
  before_script:
    - source $NVM_DIR/nvm.sh
    - nvm install $NODE_VERSION
    - nvm use $NODE_VERSION
    - npm install
  script:
    - npm run test

huskyCI:
  stage: test

codeQuality:
  stage: codeQuality
  allow_failure: true

build_dev:
  stage: build
  image: docker.artifactory.globoi.com/devops/python-node-workspace:v5
  before_script:
    - source $NVM_DIR/nvm.sh
    - nvm install $NODE_VERSION
    - nvm use $NODE_VERSION
    - npm install
  script:
    - npm run build:fanduel
  artifacts:
    expire_in: 1 days
    paths:
      - dist
      - node_modules
  only:
    refs:
      - merge_requests
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "release"

build_staging:
  stage: build
  image: docker.artifactory.globoi.com/devops/python-node-workspace:v5
  before_script:
    - source $NVM_DIR/nvm.sh
    - nvm install $NODE_VERSION
    - nvm use $NODE_VERSION
    - npm install
  script:
    - npm run build:staging
  artifacts:
    expire_in: 1 days
    paths:
      - dist
      - node_modules
  only:
    - release

build_prod:
  stage: build
  image: docker.artifactory.globoi.com/devops/python-node-workspace:v5
  before_script:
    - source $NVM_DIR/nvm.sh
    - nvm install $NODE_VERSION
    - nvm use $NODE_VERSION
    - npm install
  script:
    - npm run build:prod
  artifacts:
    expire_in: 1 days
    paths:
      - dist
      - node_modules
  only:
    - master

deploy_dev:
  stage: deploy
  extends: .deploy_tsuru
  variables:
    APP_NAME: cartola-kyc-fanduel
  when: manual
  only:
    refs:
      - merge_requests
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "release"

deploy_staging:
  stage: deploy
  extends: .deploy_tsuru
  variables:
    APP_NAME: cartola-kyc-staging
  only:
    - release

deploy_prod:
  stage: deploy
  extends: .deploy_tsuru
  variables:
    APP_NAME: cartola-kyc-prod
  when: manual
  only:
    - master